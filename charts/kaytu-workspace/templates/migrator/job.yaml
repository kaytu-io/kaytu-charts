{{- if eq (.Values.kaytu.replicaCount | toString) "0" }}
{{- else }}
apiVersion: batch/v1
kind: Job
metadata:
  name: migrator-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: migrator
      containers:
        - name: migrator
          image: {{ .Values.kaytu.migrator.worker.image.repo }}:{{- dig .Values.kaytu.envType .Values.kaytu.migrator.worker.image.tag.dev .Values.kaytu.migrator.worker.image.tag }}
          command: ["/migrator-worker"]
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          env:
{{- include "elastic.envs" . | indent 12 }}
            - name: POSTGRESQL_HOST
              value: {{ .Release.Namespace }}-postgresql-primary.{{ .Release.Namespace }}.svc.cluster.local
            - name: POSTGRESQL_PORT
              value: "5432"
            - name: POSTGRESQL_DB
              value: "migrator"
            - name: POSTGRESQL_USERNAME
              value: "migrator_worker"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: migratorServiceUserPassword
            - name: POSTGRESQL_SSLMODE
              value: {{ .Values.postgres.sslMode }}
            - name: STEAMPIPE_HOST
              value: steampipe-service.{{ .Release.Namespace }}.svc.cluster.local
            - name: STEAMPIPE_PORT
              value: "9193"
            - name: STEAMPIPE_DB
              value: "steampipe"
            - name: STEAMPIPE_USERNAME
              value: "steampipe"
            - name: STEAMPIPE_PASSWORD
              value: "abcd"
            - name: STEAMPIPE_SSLMODE
              value: "disable"
            - name: SUPERSET_BASE_URL
              value: "http://{{ .Release.Namespace }}-superset.{{ .Release.Namespace }}.svc.cluster.local:8088"
            - name: SUPERSET_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: superset-postgres-secret
                  key: dashboard-admin-password
            - name: HTTP_ADDRESS
              value: "0.0.0.0:6251"
            - name: ANALYTICS_GIT_URL
              value: "https://github.com/kaytu-io/configz"
            - name: CONTROL_ENRICHMENT_GIT_URL
              value: "https://github.com/kaytu-io/control-enrichmentor"
            - name: METADATA_BASEURL
              value: "http://metadata-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
            - name: GITHUB_TOKEN
              value: "{{ .Values.github.token }}"
            - name: PROMETHEUS_PUSH_ADDRESS
              value: "prom-system-prometheus-pushgateway.prom-system.svc.cluster.local:9091"
            - name: IS_MANUAL
              value: "true"
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: JAEGER_SERVICE_NAME
              value: "migrator"

          volumeMounts:
            - name: elasticsearch-index-config
              mountPath: /elasticsearch-index-config
            - name: inventory-data-config
              mountPath: /inventory-data-config
            - name: migrator-workspace-config
              mountPath: /workspace-migration/onboard.json
              subPath: onboard.json
            - name: migrator-workspace-config
              mountPath: /workspace-migration/metadata.json
              subPath: metadata.json
            - name: migrator-workspace-config
              mountPath: /workspace-migration/query_parameters.json
              subPath: query_parameters.json
            - name: migrator-workspace-config
              mountPath: /workspace-migration/chat_prompt.txt
              subPath: chat_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/main_prompt.txt
              subPath: main_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/assets_chat_prompt.txt
              subPath: assets_chat_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/assets_main_prompt.txt
              subPath: assets_main_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/score_chat_prompt.txt
              subPath: score_chat_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/score_main_prompt.txt
              subPath: score_main_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/compliance_chat_prompt.txt
              subPath: compliance_chat_prompt.txt
            - name: migrator-workspace-config
              mountPath: /workspace-migration/compliance_main_prompt.txt
              subPath: compliance_main_prompt.txt
      volumes:
        - name: elasticsearch-index-config
          configMap:
            name: elasticsearch-index-config
        - name: inventory-data-config
          configMap:
            name: inventory-data-config
        - name: migrator-workspace-config
          configMap:
            name: migrator-workspace-config
  backoffLimit: 5
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: migrator-workspace-config
  namespace: {{ .Release.Namespace }}
data:
  onboard.json: |
    [
      {
        "name": "AWS", 
        "label": "AWS Account", 
        "short_description": "AWS Account", 
        "description": "AWS Account",
        "auto_onboard_support": "false"
      },
      {
        "name": "Azure", 
        "label": "Azure Subscription", 
        "short_description": "Azure Subscription", 
        "description": "Azure Subscription",
        "auto_onboard_support": "true"
      }
    ]

  metadata.json: |
    [
      {"key": "workspace_id", "type": "string", "value": "{{ .Release.Namespace }}"},
      {"key": "workspace_name", "type": "string", "value": "{{ .Values.kaytu.workspace.name }}"},
      {"key": "workspace_date_time_format", "type": "string", "value": "1900-01-02"},
      {"key": "workspace_debug_mode", "type": "bool", "value": "FALSE"},
      {"key": "workspace_time_window", "type": "string", "value": "30d"},
      {"key": "asset_management_enabled", "type": "bool", "value": "TRUE"},
      {"key": "compliance_enabled", "type": "bool", "value": "TRUE"},
      {"key": "product_management_enabled", "type": "bool", "value": "TRUE"},
      {"key": "allow_invite", "type": "bool", "value": "TRUE"},
      {"key": "workspace_key_support", "type": "bool", "value": "TRUE"},
      {"key": "workspace_max_keys", "type": "int", "value": "3"},
      {"key": "allowed_email_domains", "type": "string", "value": ""},
      {"key": "auto_discovery_method", "type": "string", "value": "scheduled"},
      {"key": "full_discovery_job_interval", "type": "int", "value": "48"},
      {"key": "cost_discovery_job_interval", "type": "int", "value": "24"},
      {"key": "describe_job_interval", "type": "int", "value": "8"},
      {"key": "health_check_job_interval", "type": "int", "value": "60"},
      {"key": "insight_job_interval", "type": "int", "value": "2"},
      {"key": "metrics_job_interval", "type": "int", "value": "2"},
      {"key": "compliance_job_interval", "type": "int", "value": "24"},
      {"key": "data_retention_duration", "type": "int", "value": "366"},
      {"key": "connection_limit", "type": "int", "value": "1000"},
      {"key": "user_limit", "type": "int", "value": "1000"},
      {"key": "analytics_git_url", "type": "string", "value": "https://github.com/kaytu-io/configz"},
      {"key": "asset_discovery_aws_policy_arns", "type": "string", "value": "arn:aws:iam::aws:policy/SecurityAudit,arn:aws:iam::aws:policy/ReadOnlyAccess"},
      {"key": "spend_discovery_aws_policy_arns", "type": "string", "value": "arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess"},
      {"key": "asset_discovery_azure_role_ids", "type": "string", "value": "/subscriptions/%s/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7"},
      {"key": "spend_discovery_azure_role_ids", "type": "string", "value": "/subscriptions/%s/providers/Microsoft.Authorization/roleDefinitions/fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64"},
      {"key": "spend_discovery_azure_role_ids", "type": "string", "value": "/subscriptions/%s/providers/Microsoft.Authorization/roleDefinitions/fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64"},
      {"key": "aws_discovery_required_only", "type": "bool", "value": "true"},
      {"key": "azure_discovery_required_only", "type": "bool", "value": "true"},
      {"key": "asset_discovery_enabled", "type": "bool", "value": "true"},
      {"key": "spend_discovery_enabled", "type": "bool", "value": "true"},
      {"key": "customization_enabled", "type": "bool", "value": "false"}
    ]

  chat_prompt.txt: |
    Prompt

  main_prompt.txt: |
    Prompt

  assets_chat_prompt.txt: |
    Prompt

  assets_main_prompt.txt: |
    Prompt

  score_chat_prompt.txt: |
    TODO
  score_main_prompt.txt: |
    Prompt

  compliance_chat_prompt.txt: |
    Prompt

  compliance_main_prompt.txt: |
    Prompt

  query_parameters.json: |
    [
      {
        "key": "awsEbsSnapshotAgeMaxDays",
        "value": "30"
      },
      {
        "key": "azureComputeSnapshotAgeMaxDays",
        "value": "30"
      },
      {
        "key": "azureAksLatestVersion",
        "value": "1.28.5"
      },
      {
        "key": "awsOpensearchLatestVersion",
        "value": "OpenSearch_2.11"
      },
      {
        "key": "awsWebTierTags",
        "value": "{}"
      },
      {
        "key": "awsEc2InstanceValidInstanceTypes",
        "value": "[]"
      },
      {
        "key": "azureDatabaseServerRetentionPeriodDays",
        "value": "30"
      },
      {
        "key": "awsIcmpTrustedIpRange",
        "value": "[]"
      },
      {
        "key": "awsApprovedIamUsers",
        "value": "[]"
      },
      {
        "key": "awsIamServerCertificateAge",
        "value": "90"
      },
      {
        "key": "awsIamAccessKeyAge",
        "value": "90"
      },
      {
        "key": "awsRpcTrustedIpRange",
        "value": "[]"
      },
      {
        "key":"awsUnapprovedIamPolicies",
        "value": "[]"
      },
      {
        "key": "azureAllowedKeyTypes",
        "value": "[]"
      },
      {
        "key": "azureRsaCertificateMinSize",
        "value": "2048"
      },
      {
        "key": "azureStorageAccountAllowedIPAddresses",
        "value": "[]"
      },
      {
        "key": "azureKeyVaultKeyExpirationDateDays",
        "value": "30"
      },
      {
        "key": "azureDiskSnapshotAgeThreshold",
        "value": "30"
      },
      {
        "key": "azureSufficientInstantRestoreRetention",
        "value": "30"
      },
      {
        "key": "kaytuMoMCostGrowthMinCost",
        "value": "100"
      },
      {
        "key": "kaytuMoMCostGrowthAllowedGrowth",
        "value": "0.15"
      },
      {
        "key": "kaytuConnectionMoMCostGrowthMinCost",
        "value": "1000"
      },
      {
        "key": "kaytuConnectionMoMCostGrowthAllowedGrowth",
        "value": "0.25"
      },
      {
        "key": "awsAccessanalyzerAnalyzerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsApiGatewayStageMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCloudfrontDistributionMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCloudtrailTrailMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCloudwatchAlarmMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCloudwatchLogGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCodebuildProjectMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCodecommitRepositoryMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsCodepipelinePipelineMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsConfigRuleMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsDaxClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsDirectoryServiceDirectoryMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsDmsReplicationInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsDynamodbTableMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEbsSnapshotMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEbsVolumeMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2ApplicationLoadBalancerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2ClassicLoadBalancerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2GatewayLoadBalancerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2InstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2NetworkLoadBalancerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEc2ReservedInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEcrRepositoryMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEcsContainerInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEcsServiceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEfsFileSystemMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEksAddonMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEksClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEksIdentityProviderConfigMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsElasticBeanstalkApplicationMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsElasticBeanstalkEnvironmentMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsElasticacheClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsElasticsearchDomainMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsEventbridgeRuleMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsGuarddutyDetectorMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsIamRoleMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsIamServerCertificateMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsIamUserMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsInspectorAssessmentTemplateMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsKinesisFirehoseDeliveryStreamMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsKmsKeyMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsLambdaFunctionMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbClusterParameterGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbClusterSnapshotMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbOptionGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbParameterGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbSnapshotMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRdsDbSubnetGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRedshiftClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRoute53DomainMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsRoute53ResolverEndpointMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsS3BucketMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSagemakerEndpointConfigurationMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSagemakerModelMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSagemakerNotebookInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSagemakerTrainingJobMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSecretsmanagerSecretMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsSsmParameterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcEipMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcNatGatewayMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcNetworkAclMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcSecurityGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsVpcVpnConnectionMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsWafv2IpSetMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsWafv2RegexPatternSetMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsWafv2RuleGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "awsWafv2WebAclMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureApiManagementMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureAppServiceEnvironmentMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureAppServiceFunctionAppMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureAppServicePlanMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureAppServiceWebAppMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureApplicationSecurityGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureBatchAccountMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeAvailabilitySetMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeDiskEncryptionSetMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeDiskMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeImageMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeSnapshotMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeVirtualMachineMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureComputeVirtualMachineScaleSetMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureContainerRegistryMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureCosmosdbAccountMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureCosmosdbMongoDatabaseMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureCosmosdbSqlDatabaseMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureDataFactoryMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureDataLakeAnalyticsAccountMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureDataLakeStoreMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureEventhubNamespaceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureExpressRouteCircuitMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureFirewallMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureIothubMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKeyVaultDeletedVaultMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKeyVaultKeyMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKeyVaultManagedHardwareSecurityModuleMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKeyVaultMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKeyVaultSecretMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureKubernetesClusterMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureLbMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureLogAlertMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureLogProfileMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureLogicAppWorkflowMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureMariadbServerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureMssqlElasticpoolMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureMssqlManagedInstanceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureMysqlServerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureNetworkInterfaceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureNetworkSecurityGroupMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureNetworkWatcherFlowLogMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureNetworkWatcherMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azurePostgresqlServerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azurePublicIpMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureRecoveryServicesVaultMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureRedisCacheMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureRouteTableMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureSearchServiceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureServicebusNamespaceMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureSqlDatabaseMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureSqlServerMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureStorageAccountMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureStreamAnalyticsJobMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureVirtualNetworkGatewayMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureVirtualNetworkMandatoryTags",
        "value": "{}"
      },
      {
        "key": "azureSubscriptionMandatoryTags",
        "value": "{}"
      }
    ]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inventory-data-config
  namespace: {{ .Release.Namespace }}
data:
  {{- (.Files.Glob "inventory-data/*").AsConfig | nindent 2 }}
