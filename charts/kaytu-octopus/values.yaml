kaytu:
  ssl:
    enabled: false
  envType: dev
  domain:
    main: kaytu.app.domain
    grafana: grafana.domain
    grpc: grpc.domain
    grpc_external: grpc-external.domain
    swagger: swagger.domain
    sentry: sentry.domain
    website:
      - website.domain
    docs: docs.domain
    blog: blog.domain
    pennywise: pennywise.domain
  docker:
    registry: ghcr.io/kaytu-io
    privateRegistry: akscorekaytuprivateacr.azurecr.io
    tags:
      auth:
        dev: v0.421.5-dev # {"$imagepolicy": "flux-system:kaytu-auth-service:tag"}
        prod: v0.345.2-prod # {"$imagepolicy": "flux-system:kaytu-auth-service-prod:tag"}
      workspace:
        dev: v0.422.12-dev
        prod: v0.345.2-prod
      frontendv2:
        dev: v0.39.46-dev # {"$imagepolicy": "flux-system:kaytu-v2-frontend-service:tag"}
        prod: v0.37.6-prod # {"$imagepolicy": "flux-system:kaytu-v2-frontend-service-prod:tag"}
      pennywise:
        dev: v0.4.20-dev # {"$imagepolicy": "flux-system:pennywise-server:tag"}
        prod: v0.3.17-prod # {"$imagepolicy": "flux-system:pennywise-server-prod:tag"}
      swagger:
        dev: v0.421.7-dev # {"$imagepolicy": "flux-system:kaytu-swagger-service:tag"}
        prod: v0.345.2-prod # {"$imagepolicy": "flux-system:kaytu-swagger-service-prod:tag"}
  auth0:
    domain: kaytu.us.auth0.com
    clientId: xxx
    nativeClientId: xxx
    nativePennywiseClientId: xxx
    manageClientId: xxx
    manageSealedClientSecret: XXX
    audience: https://app.kaytu.io
    connection: 'Username-Password-Authentication'
    connectionID: 'xxx'
  dex:
    serviceName: dex
    publicClientId: public-client
    privateClientId: private-client
    issuer: ""
    connectorsFromSecret: ""
    connectors: []
    enablePasswordDB: true
    staticPasswordsFromSecret: ""
    staticPasswords:
      - email: "admin@example.com"
        hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
        username: "admin"
        userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
#      - type: github
#        id: github
#        name: GitHub
#        config:
#          clientID: xxx
#          clientSecret: xxx
#          redirectURI: 'https://kaytu.domain/dex/callback'
#          loadAllGroups: false
#          useLoginAsID: false
  apikey:
    public: ""
    private: ""
    enabled: false
  workspace:
    chart:
      version: 0.1.85
    kaytuChartLocation: "./kaytu"
  frontend:
    muiLicense: xxx
  master:
    accessKey: "" # echo "xxx" | base64
    secretKey: "" # echo "xxx" | base64
    policyARN: "xxx"
    accountID: "xxx"
    oidcProvider: "oidc.eks.us-east-2.amazonaws.com/id/xxx"
    masterRoleARN: "arn:aws:iam::xxx:role/KaytuOpenSearchAdmin"
    securityGroupID: "sg-xxx"
    subnetID: "subnet-xxx"
  vault:
    provider: hashicorp-vault
    aws:
      region: us-east-2
      roleArn: "arn:aws:iam::xxx:role/xxx"
      accessKey: ""
      secretKey: ""
    azure:
      baseUrl: "https://xxx.vault.azure.net"
      tenantId: "xxx"
      clientId: "xxx"
      clientSecret: "xxx"
    keyID: "workspace-creds"
postgres:
  name: postgres-cluster
  replicaCount: 1
  image:
    tag: 14
    repo: postgres
  sslMode: disable
redis:
  replicaCount: 1
  name: redis
flux:
  namespace: flux-system
aws:
  iam:
    subscriptionServiceRoleArn: "arn:aws:iam::xxx:role/xxx"
  firehose:
    region: us-east-2
    usageMetersStreamName: "xxx"
tls:
  sealedTlsCrt: XXX
  sealedTlsKey: XXX
azure:
  aks:
    premiumStorageClassName: "managed-csi-premium"
  eventhubConnection: ""
  serviceBusConnection: ""
github:
  token: ""
lambda: "https://xxx.execute-api.us-east-2.amazonaws.com/dev/describer"
storage:
  className: ""
vault-helm: {}
