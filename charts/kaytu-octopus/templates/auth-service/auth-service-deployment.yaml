---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: auth-service
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: {{ .Release.Namespace }}

  annotations:
    kubernetes.io/service-account.name: auth-service
type: kubernetes.io/service-account-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: auth-service
spec:
  minReadySeconds: 10
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      serviceAccountName: auth-service
      containers:
        - name: auth-service
          image: "{{ .Values.kaytu.docker.registry }}/auth-service:{{- dig .Values.kaytu.envType .Values.kaytu.docker.tags.auth.dev .Values.kaytu.docker.tags.auth }}"
          command: [ "/auth-service" ]
          imagePullPolicy: Always
          env:
            - name: KAYTU_HOST
              value: {{ .Values.kaytu.domain.main }}
            - name: METADATA_BASE_URL
              value: "http://metadata-service.%s.svc.cluster.local:6251"
            - name: POSTGRESQL_HOST
              value: {{ .Release.Namespace }}-postgresql-primary.{{ .Release.Namespace }}.svc.cluster.local
            - name: POSTGRESQL_PORT
              value: "5432"
            - name: POSTGRESQL_DB
              value: "auth"
            - name: POSTGRESQL_USERNAME
              value: "auth_service"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: authServiceUserPassword
            - name: POSTGRESQL_SSLMODE
              value: {{ .Values.postgres.sslMode }}
            - name: HTTP_ADDRESS
              value: "0.0.0.0:8251"
            - name: GRPC_ADDRESS
              value: "0.0.0.0:50051"
            - name: INVITE_LINK_TEMPLATE
              value: "https://{{ .Values.kaytu.domain.main }}/invitation?id=%s"
            - name: AUTH0_INVITE_TTL
              value: "21600"
            - name: AUTH0_MANAGE_DOMAIN
              value: "https://kaytu.us.auth0.com"
            - name: AUTH0_DOMAIN
              value: "https://kaytu.us.auth0.com/"
            - name: DEX_AUTH_DOMAIN
              value: "http://{{ .Release.Namespace }}-dex.{{ .Release.Namespace }}.svc.cluster.local:5556/dex"
            - name: DEX_AUTH_PUBLIC_CLIENT_ID
              value: public-client
            - name: KAYTU_KEY_ENABLED
              value: "{{ .Values.kaytu.apikey.enabled }}"
            - name: KAYTU_PUBLIC_KEY
              # openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
              # openssl rsa -pubout -in private_key.pem -out public_key.pem
              valueFrom:
                secretKeyRef:
                  key: public
                  name: kaytu-private
            - name: KAYTU_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  key: private
                  name: kaytu-private
            - name: GRPC_TLS_CERT_PATH
              value: /etc/certs/tls.crt
            - name: GRPC_TLS_KEY_PATH
              value: /etc/certs/tls.key
            - name: GRPC_TLS_CA_PATH
              value: /etc/certs/ca.crt
            - name: WORKSPACE_BASE_URL
              value: "http://workspace-service.{{ .Release.Namespace }}.svc.cluster.local:8351"
          volumeMounts:
            - mountPath: /etc/certs
              name: tls-certs
              readOnly: true
      volumes:
        - name: tls-certs
          secret:
            secretName: auth-service-tls
            optional: false
